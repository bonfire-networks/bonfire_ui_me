<div data-id="hero_more_actions" class="ml-auto flex items-center gap-3">
  {#if current_user_id(@__context__) == id(@user)}
    <LinkLive
      to={~p"/settings/user/profile"}
      class="btn hidden lg:flex btn-sm btn-soft btn-secondary btn-circle"
    >
      <#Icon iconify="ph:gear" class="w-4 h-4" />
      <span class="sr-only">{l("Edit profile")}</span>
    </LinkLive>
  {/if}

  <div aria-haspopup="true" class="dropdown dropdown-end">
    <label tabindex="0" class="btn btn-sm btn-circle btn-ghost">
      <#Icon solid="DotsVertical" class="w-4 h-4" />
    </label>
    <ul
      tabindex="0"
      role="menu"
      aria-orientation="vertical"
      class="mt-1 relative z-50 rounded-xl shadow-xl dropdown_actions w-60 p-0.5 menu dropdown-content bg-base-100 border border-base-content/10"
    >
      <li :if={@permalink}>
        <a
          phx-hook="Copy"
          id={"hero_action_copy_url_#{id(@user)}"}
          href={@permalink}
          class="flex items-center gap-2 text-sm text-base-content"
        >
          <#Icon iconify="ri:file-copy-line" class="w-4 h-4 shrink-0" />
          <span data-role="label">{l("Copy link")}</span>
        </a>
      </li>

      {#if @character_type == :user and extension_enabled?(:bonfire_ui_social_graph, @__context__)}
        <li>
          <LinkPatchLive
            class="flex items-center gap-1"
            to={~p"/@#{e(@user, :character, :username, nil)}/followed"}
          >
            <span class="text-sm hover:underline font-semibold">
              {l("Following")}
            </span>
            <span :if={e(@user, :following_count, nil)} class="text-xs text-base-content/50">
              {e(@user, :following_count, 0)}
            </span>
          </LinkPatchLive>
        </li>
        <li>
          <LinkPatchLive
            class="flex items-center gap-1"
            to={~p"/@#{e(@user, :character, :username, nil)}/followers"}
          >
            <span class="text-sm hover:underline font-semibold">
              {l("Followers")}
            </span>
            <span :if={e(@user, :followers_count, nil)} class="text-xs text-base-content/50">
              {e(@user, :followers_count, 0)}
            </span>
          </LinkPatchLive>
        </li>
      {/if}

      {#if current_user_id(@__context__) == id(@user)}
        <li>
          <LinkLive to="/settings" class="flex items-center gap-2 text-sm text-base-content">
            <#Icon iconify="ph:gear" class="w-4 h-4 shrink-0" />
            <span>{l("Settings")}</span>
          </LinkLive>
        </li>

        <li>
          <LinkLive to="/notifications" class="flex items-center gap-2 text-sm text-base-content">
            <#Icon iconify="carbon:notification" class="w-4 h-4" />
            <span>{l("Notifications")}</span>
          </LinkLive>
        </li>

        <li :if={extension_enabled?(:bonfire_ui_messages, @__context__)}>
          <LinkLive to="/messages" class="flex items-center gap-2 text-sm text-base-content">
            <#Icon iconify="carbon:email" class="w-4 h-4" />
            <span>{l("Messages")}</span>
          </LinkLive>
        </li>
        <li>
          <LinkLive to={~p"/logout"} class="flex items-center gap-2 text-sm">
            <#Icon iconify="uil:exit" class="w-4 h-4" />

            <span>{l("Logout")}</span>
          </LinkLive>
        </li>
      {#else}
        {#if @character_type == :group}
          <!-- <li
            class="create_new_topic"
            module={Bonfire.Boundaries.can?(@__context__, :edit, @user) && current_user_id(@__context__)}
          >
            <StatelessComponent
              module={maybe_component(Bonfire.UI.Topics.NewTopicLive, @__context__)}
              parent={@user}
              label={l("New topic")}
            />
          </li> -->
          <li :if={current_user_id(@__context__)}>
            <LinkLive to={path(@user, :settings)} class="flex items-center gap-2 text-sm text-base-content">
              <#Icon iconify="ph:gear" class="w-4 h-4 shrink-0" />
              <span>{l("Settings")}</span>
            </LinkLive>
          </li>
        {/if}

        <li :if={extension_enabled?(:bonfire_ui_messages, @__context__)}>
          {#if current_user_id(@__context__)}
            <Bonfire.UI.Common.SmartInputButtonLive
              create_object_type={:message}
              icon="carbon:email"
              icon_class="!w-4 !h-4"
              prompt={l("Send a message")}
              smart_input_opts={%{
                recipients_editable: true,
                to_circles: [
                  {id(@user), e(@user, :profile, :name, nil) || e(@user, :character, :username, l("someone"))}
                ]
              }}
              class="flex items-center text-sm text-base-content"
            />
          {#else}
            <a
              href={"/remote_interaction?type=message&name=#{l("this user")}&url=#{@permalink || URIs.canonical_url(@object)}"}
              class="flex items-center text-sm text-base-content"
            >
              <#Icon iconify="carbon:email" class="w-4 h-4 shrink-0" />
              <span class="truncate ellipsis">{l("Send a message")}</span>
            </a>
          {/if}
        </li>

        {#if @character_type == :user and current_user_id(@__context__)}
          <li>
            <StatelessComponent
              :if={current_user(@__context__)}
              module={maybe_component(Bonfire.UI.Boundaries.AddToCircleLive, @__context__)}
              user_id={id(@user)}
              parent_id="profile_hero"
            />
          </li>
        {/if}

        <li class="">
          <StatelessComponent
            module={maybe_component(Bonfire.UI.Moderation.FlagActionLive, @__context__)}
            object={@user}
            permalink={@permalink}
            parent_id="profile_hero"
            object_type={e(@user, :profile, :name, "this user")}
            class="flex items-center p-4 text-sm text-base-content"
          />
        </li>

        {!-- TODO: pass the silenced/ghosted/blocked booleans so it isn't re-queried by BlockButtonLive --}
        <StatelessComponent
          module={maybe_component(Bonfire.UI.Boundaries.BlockMenuButtonsLive, @__context__)}
          parent_id="profile_hero"
          object={@user}
          permalink={@permalink}
        />

        {#if !e(@user, :character, :peered, nil)}
          {#if @character_type == :user and
              maybe_apply(Bonfire.Me.Accounts, :is_admin?, [@__context__], fallback_return: nil) == true}
            {#if !maybe_apply(Bonfire.Me.Accounts, :is_admin?, [@user], fallback_return: nil) == true}
              <li phx-click="Bonfire.Me.Users:make_admin" phx-value-username_or_id={id(@user)} class="">
                <div>
                  <button class="flex items-center gap-2 text-sm text-base-content">
                    <#Icon solid="Key" class="w-4 h-4 shrink-0 text-base-content" />
                    <span>{l("Make admin")}</span>
                  </button>
                </div>
              </li>
            {#else}
              <li phx-click="Bonfire.Me.Users:revoke_admin" phx-value-username_or_id={id(@user)} class="">
                <div>
                  <button class="flex items-center gap-2 text-sm text-base-content">
                    <#Icon solid="Key" class="w-4 h-4 shrink-0 text-base-content" />
                    <span>{l("Revoke admin")}</span>
                  </button>
                </div>
              </li>
            {/if}
          {/if}
        {#else}
          <li>
            <div
              phx-click="Bonfire.Me.Users:fetch_outbox"
              phx-value-canonical_uri={@permalink}
              class="flex items-center gap-2 text-sm text-base-content"
            >
              <#Icon iconify="mdi:sprout" class="w-4 h-4 shrink-0 text-base-content" />
              <span>{l("Get latest activities")}</span>
            </div>
          </li>
          <li>
            <a
              href={@permalink}
              target="_blank"
              rel="noopener noreferrer"
              class="flex items-center gap-2 text-sm text-base-content"
            >
              <#Icon solid="ExternalLink" class="w-4 h-4 shrink-0 text-base-content" />
              <span>{l("View remotely")}</span>
            </a>
          </li>
        {/if}
      {/if}
    </ul>
  </div>
</div>