<section data-id="profile_hero" class="relative">
  <div>
    {!-- TODO: put this logic in `update` fn instead? --}
    {#case {Media.avatar_url(@user), Media.banner_url(@user)}}
      {#match {avatar_url, banner_url}}
        {#case Media.maybe_dominant_color(id(@user), avatar_url, banner_url)}
          {#match color}
            <div
              data-id="hero_background"
              class={
                "relative bg-center mt-0 bg-cover bg-no-repeat",
                "bg-base-200 h-[140px] md:h-[200px]": !color,
                "bg-gradient-to-b h-[40px] md:h-[100px]": is_binary(color)
              }
              style={if not is_binary(color),
                do: "background-image: url('#{banner_url}')",
                else: "--tw-gradient-stops: transparent, #{color} 3%, #{color} 94%, transparent"}
            >
              {!-- 
             <div class="absolute right-2 bottom-2 opacity-90">
              </div> --}
            </div>
            <div data-id="hero_data" class="mb-4 px-4">
              <div class="flex w-full gap-2">
                {#if @character_type == :user and
                    !Settings.get([Bonfire.UI.Common.AvatarLive, :hide_avatars], false, @__context__)}
                  <LinkPatchLive to={~p"/@#{e(@user, :character, :username, nil)}"}>
                    <Bonfire.UI.Common.AvatarLive
                      parent_id="profile-hero"
                      class="inline-block object-cover  w-[92px] h-[92px] md:w-[130px] md:h-[130px] -mt-[30px] md:-mt-[70px] md:mx-0 rounded-full"
                      src={Media.avatar_url(@user)}
                      user_id={id(@user)}
                      src={avatar_url}
                    />
                    {!-- 
                    NOTE: avoid putting a bg or border on the avatar, so alpha bg ones are displayed correctly
                    bg-base-100 border-4 border-base-100 ring-2 ring-base-300 fill-base-200 --}
                  </LinkPatchLive>
                {/if}

                <div class="mt-2 flex flex-col">
                  <div class="flex items-center text-xl font-bold text-base-content">
                    <LinkPatchLive to={~p"/@#{e(@user, :character, :username, nil)}"}>
                      {e(@user, :profile, :name, "Anonymous")}
                    </LinkPatchLive>
                    <span
                      :if={module_enabled?(Bonfire.Data.SharedUser, @__context__) && e(@user, :shared_user, :label, nil)}
                      class="ml-3 badge badge-sm badge-info badge-outline"
                    >
                      {e(@user, :shared_user, :label, "")}
                    </span>
                  </div>
                  <div class="flex items-center">
                    <span class="font-normal text-sm text-base-content/70">{Bonfire.Me.Characters.display_username(@user, true)}</span>
                  </div>
                </div>

                <Bonfire.UI.Me.HeroMoreActionsLive
                  character_type={@character_type}
                  ghosted_instance_wide?={@ghosted_instance_wide?}
                  silenced_instance_wide?={@silenced_instance_wide?}
                  ghosted?={@ghosted?}
                  silenced?={@silenced?}
                  boundary_preset={@boundary_preset}
                  user={@user}
                  members={@members}
                  moderators={@moderators}
                />
              </div>
              <div class="w-full">
                <div class={"flex items-start justify-between w-full pr-6 flex-1": @character_type != :user}>
                  <div class="flex flex-col w-full gap-1 mt-3">
                    <div class="flex items-start w-full justify-between">
                      <!-- <div
      :if={Settings.get([Bonfire.UI.Common.AvatarLive, :hide_avatars], false, @__context__)}
      class="mt-3 mr-6 flex items-center justify-between"
    >
      <Bonfire.UI.Me.HeroMoreActionsLive
        ghosted_instance_wide?={@ghosted_instance_wide?}
        silenced_instance_wide?={@silenced_instance_wide?}
        ghosted?={@ghosted?}
        silenced?={@silenced?}
        character_type={@character_type}
        boundary_preset={@boundary_preset}
        user={@user}
        members={@members}
        moderators={@moderators}
      />
    </div> -->
                    </div>
                  </div>

                  <!-- <Bonfire.UI.Me.ProfileInfoLive
                    ghosted_instance_wide?={@ghosted_instance_wide?}
                    silenced_instance_wide?={@silenced_instance_wide?}
                    ghosted?={@ghosted?}
                    silenced?={@silenced?}
                    character_type={@character_type}
                    boundary_preset={@boundary_preset}
                    user={@user}
                    path={@path}
                    selected_tab={@selected_tab}
                    members={@members}
                    moderators={@moderators}
                  /> -->

                  <Bonfire.UI.Me.ProfileBlockedIndicatorLive
                    object={@user}
                    user={@user}
                    is_local_user={@is_local?}
                    boundary_preset={@boundary_preset}
                    ghosted_instance_wide?={@ghosted_instance_wide?}
                    silenced_instance_wide?={@silenced_instance_wide?}
                    ghosted?={@ghosted?}
                    silenced?={@silenced?}
                  />
                </div>

                {!-- <Bonfire.UI.Me.ProfileNavLive user={@user} path={@path} selected_tab={@selected_tab} /> --}
              </div>
            </div>
        {/case}
    {/case}
  </div>
</section>
