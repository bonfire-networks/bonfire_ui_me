<div class="relative">
  <div class="border-b border-base-content/10">
    <div class="">
      <div
        class="relative bg-center mt-0 bg-cover bg-no-repeat bg-base-200 h-[200px]"
        style={"background-image: url('#{Media.banner_url(@user)}')"}
      >
        {#if @transparent_header}
          <div class="absolute md:hidden z-10 top-0 left-0 w-full h-[200px] bg-gradient-to-b from-black/80 to-transparent" />
        {/if}
        <!-- FOLLOWS YOU LABEL -->
        <div :if={@follows_me} class="absolute rounded right-2 bottom-2 opacity-90 badge h-[1.75rem]">
          {"Follows you"}
        </div>
      </div>
      <div class="flex flex-col items-start mx-auto mb-3">
        <div class="flex justify-between w-full px-6">
          <Bonfire.UI.Common.AvatarLive
            parent_id="profile-hero"
            class="inline-block object-cover w-[140px] h-[140px] -mt-[70px] md:mx-0 rounded-full ring-4 ring-base-300 bg-base-200 fill-base-200"
            bg_class=""
            size="100%"
            user={@user}
          />
          <div class="flex items-center gap-3">
            <div aria-haspopup="true" class="dropdown dropdown-end">
              <label tabindex="0" class="btn h-[34px] w-[34px] btn-sm btn-circle btn-outline border-base-content/30">
                <#Icon solid="DotsVertical" class="w-4 h-4" />
              </label>
              <ul
                tabindex="0"
                role="menu"
                aria-orientation="vertical"
                class="!block mt-1 rounded-xl shadow-xl dropdown_actions w-64 menu md:menu-compact dropdown-content bg-base-100"
              >
                <li :if={e(@user, :character, :peered, :canonical_uri, nil)}>
                  <a
                    href={e(@user, :character, :peered, :canonical_uri, "#")}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="flex items-center gap-2 text-base md:text-sm text-base-content/80"
                  >
                    <#Icon solid="ExternalLink" class="w-4 h-4 shrink-0 text-base-content/80" />
                    <span>{l("View on the original instance")}</span>
                  </a>
                </li>

                {#if current_user_id(@__context__)}
                  {#if current_user_id(@__context__) == id(@user)}
                    <li>
                      <LiveRedirect
                        to={~p"/settings/preferences"}
                        class="flex items-center gap-2 text-base md:text-sm text-base-content/80"
                      >
                        <!-- <#Icon solid="Cog" class="w-4 h-4" /> -->
                        {l("Preferences")}
                      </LiveRedirect>
                    </li>
                  
                    <li class="">
                      <LiveRedirect
                        to={~p"/feed/likes"}
                        class="flex items-center gap-2 text-base md:text-sm text-base-content/80"
                      >
                        <!-- <#Icon solid="Cog" class="w-4 h-4" /> -->
                        {l("Favourites")}
                      </LiveRedirect>
                    </li>

                    <li class="">
                      <LiveRedirect
                        to={~p"/boundaries/acls"}
                        class="flex items-center gap-2 text-base md:text-sm text-base-content/80"
                      >
                        <!-- <#Icon solid="Cog" class="w-4 h-4" /> -->
                        {l("Boundaries")}
                      </LiveRedirect>
                    </li>

                  {#else}
                    <li class="">
                      <Bonfire.UI.Common.FlagActionLive
                        object={@user}
                        parent_id="profile_hero"
                        object_type={e(@user, :profile, :name, "this user")}
                        class="flex items-center p-4 text-sm text-base-content/80"
                      />
                    </li>

                    <Bonfire.Boundaries.Web.BlockMenuButtonsLive parent_id="profile_hero" object={@user} />
                    

                    {#if @character_type == :user and is_admin?(current_user(@__context__))}
                      {#if !is_admin?(@user)}
                        <li phx-click="Bonfire.Me.Users:make_admin" phx-value-username_or_id={id(@user)} class="">
                          <button class="flex items-center gap-2 py-2 text-sm text-base-content/80">
                            <#Icon solid="Key" class="w-4 h-4 shrink-0 text-base-content/80" />
                            <span>{l("Make admin")}</span>
                          </button>
                        </li>
                      {#else}
                        <li phx-click="Bonfire.Me.Users:revoke_admin" phx-value-username_or_id={id(@user)} class="">
                          <button class="flex items-center gap-2 py-2 text-sm text-base-content/80">
                            <#Icon solid="Key" class="w-4 h-4 shrink-0 text-base-content/80" />
                            <span>{l("Revoke admin")}</span>
                          </button>
                        </li>
                      {/if}
                    {/if}
                  {/if}
                {#else}
                  <li class="">
                    <Bonfire.UI.Common.FlagActionLive
                      object={@user}
                      parent_id="profile_hero"
                      object_type={e(@user, :profile, :name, "this user")}
                      class="flex items-center p-4 text-sm text-neutral"
                    />
                  </li>
                {/if}
              </ul>
            </div>
            <Bonfire.UI.Common.SmartInputButtonLive
              :if={@character_type == :user && current_user_id(@__context__) != id(@user)}
              create_object_type={:message}
              smart_input_opts={%{
                to_circles: [
                  %{
                    (e(@user, :profile, :name, nil) || e(@user, :character, :username, l("someone"))) =>
                      id(@user)
                  }
                ]
              }}
              icon="ri:mail-line"
              class="btn h-[34px] w-[34px] btn-sm btn-circle btn-outline border-base-content/30"
            />
            <LiveRedirect
              :if={current_user_id(@__context__) == id(@user)}
              to={~p"/settings/profile"}
              class="normal-case rounded btn btn-sm btn-outline border-base-content/30"
            >
              {l("Edit profile")}
            </LiveRedirect>
            {#if (@ghosted_instance_wide? == true && @silenced_instance_wide? == true) or (@ghosted? == true && @silenced? == true)}
            <button disabled class="font-semibold !h-[34px] btn-sm px-6 normal-case rounded btn btn-disabled">
              {l("Blocked")}
            </button>
            {#else}
            <div 
              data-role="follow_wrapper" 
              :if={current_user_id(@__context__) != id(@user)}>
              <Bonfire.UI.Common.FollowButtonLive
                id={ComponentID.new(Bonfire.UI.Common.FollowButtonLive, id(@user), __MODULE__)}
                object_id={id(@user)}
                object={@user}
                path={path(@user)}
                hide_icon
                class="font-semibold !h-[34px] btn-sm px-6 normal-case rounded btn btn-primary"
              />
            </div>
            {/if}
          </div>
        </div>
        <div class="flex flex-col flex-1 w-full gap-2">
          <div class="flex flex-col gap-1 mt-3">
            <div class="flex items-center pl-6 text-xl font-bold text-base-content">
              <LivePatch to={~p"/@#{e(@user, :character, :username, nil)}"}>
                {e(@user, :profile, :name, "Anonymous")}
              </LivePatch>
              <span
                :if={module_enabled?(Bonfire.Data.SharedUser) && e(@user, :shared_user, :label, nil)}
                class="ml-3 badge badge-sm badge-info badge-outline"
              >
                {e(@user, :shared_user, :label, "")}
              </span>
              <span :if={is_admin?(@user)} class="ml-3 badge badge-sm badge-info">
                {l("Admin")}
              </span>
            </div>
            <div class="flex items-center pl-6">
              <span class="text-sm font-normal text-base-content/70">{Bonfire.Me.Characters.display_username(@user, true)}</span>
            </div>

            <div class="px-6 mt-1">
              <div class="w-full leading-6 prose md:prose-sm prose-p:pt-2">
                {rich(e(@user, :profile, :summary, ""))}
              </div>

              <div
                :if={e(@user, :profile, :location, nil) || e(@user, :profile, :website, nil)}
                class="flex items-center mt-4 space-x-4"
              >
                <div :if={e(@user, :profile, :location, nil)} class="flex items-center">
                  <#Icon solid="LocationMarker" class="w-5 h-5 text-base-content/70" />
                  <span class="ml-2 text-xs text-base-content/70">
                    {e(@user, :profile, :location, "")}
                  </span>
                </div>
                <div :if={e(@user, :profile, :website, nil)} class="flex items-center">
                  {#case Bonfire.Files.FaviconStore.favicon_url(e(@user, :profile, :website, nil))}
                    {#match nil}
                      <#Icon solid="ExternalLink" class="w-5 h-5 text-base-content/70" />
                    {#match image}
                      <img src={image} class="w-4 h-4 text-base-content/70">
                  {/case}

                  <a
                    href={"#{e(@user, :profile, :website, "")}"}
                    target="blank"
                    class="ml-2 text-xs link link-hover text-base-content/70"
                  >
                    {display_url(e(@user, :profile, :website, ""))}
                  </a>
                </div>
              </div>
            </div>
            <!-- <div class="px-6 mt-3">
              <Bonfire.UI.Common.BlockButtonProfileLive 
                id={ComponentID.new(Bonfire.UI.Common.BlockButtonLive, id(@user), __MODULE__)}
                object_id={id(@user)}
                object={@user}
                hide_icon
                show_follow_button
                path={path(@user)}
              /> 
            </div> -->
             {#if 
              @ghosted_instance_wide? == nil and 
              @silenced_instance_wide? == nil and 
              @ghosted? == nil and 
              @silenced? == nil}
              <div></div>
            {#else}
              <div class="px-6">
                {#if @ghosted_instance_wide? or @silenced_instance_wide?}

                <div 
                  :if={@ghosted_instance_wide? and @silenced_instance_wide?}
                  class="flex items-baseline gap-2">
                  <div class="prose prose-sm text-sm font-normal text-base-content/70">{l "Admins have blocked this user."}</div>
                  <div :if={is_admin?(@current_user)}>
                  <Bonfire.Boundaries.Web.BlockButtonLive
                    object={@object}
                    type="block"
                    only_admin
                    label={e(@object, :profile, :name, l("this user"))}
                    open_btn_label={l("Unblock instance-wide")}
                    parent_id={"user-#{id(@user)}"}
                    class="link link-error text-sm"
                  />
                  </div>
                </div>
                <div 
                  :if={@ghosted_instance_wide? and !@silenced_instance_wide?}
                  class="flex items-baseline gap-2">
                  <div class="prose prose-sm text-sm font-normal text-base-content/70">{l "Admins have ghosted this user."}</div>
                 <div :if={is_admin?(@current_user)}>
                  <Bonfire.Boundaries.Web.BlockButtonLive
                    object={@object}
                    type="ghost"
                    only_admin
                    label={e(@object, :profile, :name, l("this user"))}
                    open_btn_label={l("Unghost instance-wide")}
                    parent_id={"user-#{id(@user)}"}
                    class="link link-primary text-sm"
                  />
                  </div>
                </div>
                <div 
                  :if={!@ghosted_instance_wide? and @silenced_instance_wide?}
                  class="flex items-baseline gap-2">
                  <div class="prose prose-sm text-sm font-normal text-base-content/70">{l "Admins have silenced this user."}</div>
                  <div :if={is_admin?(@current_user)}>
                    <Bonfire.Boundaries.Web.BlockButtonLive
                      object={@object}
                      type="silence"
                      only_admin
                      title={l("Unsilence %{user} instance-wide", user: e(@object, :profile, :name, ""))}
                      label={e(@object, :profile, :name, l("this user"))}
                      open_btn_label={l("Unsilence instance-wide")}
                      parent_id={"user-#{id(@user)}"}
                      class="link link-primary text-sm"
                    />
                    </div>
                </div>
                {#elseif @ghosted? != nil or @silenced? != nil}
                <div 
                  :if={@ghosted? and @silenced?}
                  class="flex items-baseline gap-2">
                  <div class="prose prose-sm text-sm font-normal text-base-content/70">{l "You have blocked this user."} </div>
                  <div>
                  <Bonfire.Boundaries.Web.BlockButtonLive
                    object={@object}
                    type="block"
                    only_user
                    label={e(@object, :profile, :name, l("this user"))}
                    open_btn_label={l("Unblock")}
                    parent_id={"user-#{id(@user)}"}
                    class="link link-error text-sm"
                  />
                  </div>
                </div>
                <div 
                  :if={!@ghosted? and @silenced?}
                  class="flex items-baseline gap-2">
                  <div class="prose prose-sm text-sm font-normal text-base-content/70">{l "You have silenced this user."} </div>
                  <div>
                  <Bonfire.Boundaries.Web.BlockButtonLive
                    object={@object}
                    type="silence"
                    only_user
                    title={l("Unsilence %{user}", user: e(@object, :profile, :name, ""))}
                    label={e(@object, :profile, :name, l("this user"))}
                    open_btn_label={l("Unsilence")}
                    parent_id={"user-#{id(@user)}"}
                    class="link link-primary text-sm"
                  />
                  </div>
                </div>
                <div 
                  :if={@ghosted? and !@silenced?}
                  class="flex items-baseline gap-2">
                  <div class="prose prose-sm text-sm font-normal text-base-content/70">{l "You have ghosted this user."} </div>
                  <div>
                  <Bonfire.Boundaries.Web.BlockButtonLive
                    object={@object}
                    type="ghost"
                    only_user
                    label={e(@object, :profile, :name, l("this user"))}
                    open_btn_label={l("Unghost")}
                    parent_id={"user-#{id(@user)}"}
                    class="link link-primary text-sm"
                  />
                  </div>
                  <!-- <button class="link link-primary link-sm">{l "Unghost"}</button> -->
                </div>
                {/if}
              </div>
            {/if}

            <div class="w-full px-6 pt-3 mt-3">
              <div class="flex items-center gap-8 text-base-content">
                <LivePatch
                  class={
                    "text-sm flex items-baseline gap-2 font-medium text-base-content/70 hover:text-base-content/100 relative",
                    "text-base-content/100 with_tab": @selected_tab in ["timeline", "posts", "boosts"]
                  }
                  to={~p"/user/#{e(@user, :character, :username, "")}"}
                >
                  <strong
                    :if={Bonfire.Me.Settings.get([:ui, :metrics, :posts_count], nil, @__context__)}
                    class="text-base-content"
                  >
                    {e(@user, :character, :posts_count, 0)}
                  </strong>
                  <span>{l("Activities")}</span>
                </LivePatch>

                <LivePatch
                  class={
                    "text-sm flex items-baseline gap-2 font-medium text-base-content/70 hover:text-base-content/100 relative",
                    "text-base-content/100 with_tab": @selected_tab == "followers" or @selected_tab == "followed"
                  }
                  to={~p"/user/#{e(@user, :character, :username, "")}/followers"}
                >
                  <span>{l("Network")}</span>
                </LivePatch>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
