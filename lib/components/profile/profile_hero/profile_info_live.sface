<div class="flex flex-col w-full gap-1 mt-3">
  <div class="flex items-top w-full justify-between">
    <div class="flex flex-col pl-6">
      <div class="flex items-center text-lg font-bold text-base-content">
        <LivePatch to={~p"/@#{e(@user, :character, :username, nil)}"}>
          {e(@user, :profile, :name, "Anonymous")}
        </LivePatch>
        <span
          :if={module_enabled?(Bonfire.Data.SharedUser) && e(@user, :shared_user, :label, nil)}
          class="ml-3 badge badge-sm badge-info badge-outline"
        >
          {e(@user, :shared_user, :label, "")}
        </span>
      </div>
      <div class="flex items-center">
        <span class="font-normal text-sm text-base-content/70">{Bonfire.Me.Characters.display_username(@user, true)}</span>
      </div>
      <span :if={is_admin?(@user)} class="badge badge-outline mt-4 rounded badge-info">
        {l("Admin")}
      </span>
    </div>
  </div>

  <div class="pl-6 mt-1">
    <div :if={@character_type == :user} class="w-full leading-6 prose md:prose-sm prose-p:pt-2">
      {rich(e(@user, :profile, :summary, ""))}
    </div>

    <!-- :if={e(@user, :profile, :location, nil) || e(@user, :profile, :website, nil)} -->
    <div :if={@character_type == :user} class="flex items-center mt-4 w-full space-x-4">
      <!-- <LivePatch
        class="flex items-center"
        to={"/" <> @path <> e(@user, :character, :username, "") <> "/followers"}
      >
        <#Icon iconify="eos-icons:network" class="w-5 h-5 text-base-content/70" />
        <span class="link link-hover ml-2 text-sm text-base-content font-medium">
          {l("Network")}
        </span>
      </LivePatch> -->
      <div :if={e(@user, :profile, :location, nil)} class="flex items-center">
        <#Icon solid="LocationMarker" class="w-5 h-5 text-base-content/70" />
        <span class="ml-2 text-sm text-base-content/70">
          {e(@user, :profile, :location, "")}
        </span>
      </div>
      <div :if={e(@user, :profile, :website, nil)} class="flex items-center">
        {#case Bonfire.Files.FaviconStore.favicon_url(e(@user, :profile, :website, nil))}
          {#match nil}
            <#Icon solid="ExternalLink" class="w-5 h-5 text-base-content/70" />
          {#match image}
            <img src={image} class="w-4 h-4 text-base-content/70">
        {/case}

        <a
          href={"#{e(@user, :profile, :website, "")}"}
          target="blank"
          class="ml-2 text-sm link link-hover text-base-content/70"
        >
          {display_url(e(@user, :profile, :website, ""))}
        </a>
      </div>
    </div>

    <div :if={@character_type != :user} class="mt-3 flex items-center justify-between">
      <!-- <div class="avatar-group -space-x-4">
        <div :for={m <- @members} class="avatar">
          <div class="w-8">
            <Bonfire.UI.Common.AvatarLive user={m} />
          </div>
        </div>
        <div class="avatar placeholder">
          <div class="w-8 bg-neutral-focus text-neutral-content text-xs">
            <span>+99</span>
          </div>
        </div>
      </div> -->
      <Bonfire.UI.Me.HeroMoreActionsLive
        ghosted_instance_wide?={@ghosted_instance_wide?}
        silenced_instance_wide?={@silenced_instance_wide?}
        ghosted?={@ghosted?}
        silenced?={@silenced?}
        character_type={@character_type}
        boundary_preset={@boundary_preset}
        user={@user}
        members={@members}
        moderators={@moderators}
      />
    </div>
  </div>
  <div>
  </div>
  {#if @ghosted_instance_wide? == nil and
      @silenced_instance_wide? == nil and
      @ghosted? == nil and
      @silenced? == nil}
    <div />
  {#else}
    <div class="px-6">
      {#if @ghosted_instance_wide? or @silenced_instance_wide?}
        <div :if={@ghosted_instance_wide? and @silenced_instance_wide?} class="flex items-baseline gap-2">
          <div class="prose prose-sm text-sm font-normal text-base-content/70">{l("Admins have blocked this user.")}</div>
          <div :if={is_admin?(@current_user)}>
            <Bonfire.Boundaries.Web.BlockButtonLive
              object={@user}
              type="block"
              only_admin
              label={e(@user, :profile, :name, l("this user"))}
              open_btn_label={l("Unblock instance-wide")}
              parent_id={"user-#{id(@user)}"}
              class="link link-error text-sm"
            />
          </div>
        </div>
        <div
          :if={@ghosted_instance_wide? and !@silenced_instance_wide?}
          class="flex items-baseline gap-2"
        >
          <div class="prose prose-sm text-sm font-normal text-base-content/70">{l("Admins have ghosted this user.")}</div>
          <div :if={is_admin?(@current_user)}>
            <Bonfire.Boundaries.Web.BlockButtonLive
              object={@user}
              type="ghost"
              only_admin
              label={e(@user, :profile, :name, l("this user"))}
              open_btn_label={l("Unghost instance-wide")}
              parent_id={"user-#{id(@user)}"}
              class="link link-primary text-sm"
            />
          </div>
        </div>
        <div
          :if={!@ghosted_instance_wide? and @silenced_instance_wide?}
          class="flex items-baseline gap-2"
        >
          <div class="prose prose-sm text-sm font-normal text-base-content/70">{l("Admins have silenced this user.")}</div>
          <div :if={is_admin?(@current_user)}>
            <Bonfire.Boundaries.Web.BlockButtonLive
              object={@user}
              type="silence"
              only_admin
              title={l("Unsilence %{user} instance-wide", user: e(@user, :profile, :name, ""))}
              label={e(@user, :profile, :name, l("this user"))}
              open_btn_label={l("Unsilence instance-wide")}
              parent_id={"user-#{id(@user)}"}
              class="link link-primary text-sm"
            />
          </div>
        </div>
      {#elseif @ghosted? != nil or @silenced? != nil}
        <div :if={@ghosted? and @silenced?} class="flex items-baseline gap-2">
          <div class="prose prose-sm text-sm font-normal text-base-content/70">{l("You have blocked this user.")}
          </div>
          <div>
            <Bonfire.Boundaries.Web.BlockButtonLive
              object={@user}
              type="block"
              only_user
              label={e(@user, :profile, :name, l("this user"))}
              open_btn_label={l("Unblock")}
              parent_id={"user-#{id(@user)}"}
              class="link link-error text-sm"
            />
          </div>
        </div>
        <div :if={!@ghosted? and @silenced?} class="flex items-baseline gap-2">
          <div class="prose prose-sm text-sm font-normal text-base-content/70">{l("You have silenced this user.")}
          </div>
          <div>
            <Bonfire.Boundaries.Web.BlockButtonLive
              object={@user}
              type="silence"
              only_user
              title={l("Unsilence %{user}", user: e(@user, :profile, :name, ""))}
              label={e(@user, :profile, :name, l("this user"))}
              open_btn_label={l("Unsilence")}
              parent_id={"user-#{id(@user)}"}
              class="link link-primary text-sm"
            />
          </div>
        </div>
        <div :if={@ghosted? and !@silenced?} class="flex items-baseline gap-2">
          <div class="prose prose-sm text-sm font-normal text-base-content/70">{l("You have ghosted this user.")}
          </div>
          <div>
            <Bonfire.Boundaries.Web.BlockButtonLive
              object={@user}
              type="ghost"
              only_user
              label={e(@user, :profile, :name, l("this user"))}
              open_btn_label={l("Unghost")}
              parent_id={"user-#{id(@user)}"}
              class="link link-primary text-sm"
            />
          </div>
          <!-- <button class="link link-primary link-sm">{l "Unghost"}</button> -->
        </div>
      {/if}
    </div>
  {/if}

  <div class="flex ml-6 items-center gap-6">
    <LivePatch
      class="flex items-center"
      to={"/" <> @path <> e(@user, :character, :username, "") <> "/followers"}
    >
      <span class="text-sm text-base-content/50 font-medium">
        <b class="text-base-content/100">39</b> {l("Followed")}
      </span>
    </LivePatch>
    <LivePatch
      class="flex items-center"
      to={"/" <> @path <> e(@user, :character, :username, "") <> "/followers"}
    >
      <span class="text-sm text-base-content/50 font-medium">
        <b class="text-base-content/100">39</b> {l("Followers")}
      </span>
    </LivePatch>
  </div>
</div>