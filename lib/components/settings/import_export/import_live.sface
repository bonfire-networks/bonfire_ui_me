<Form multipart submit="import" change="validate" opts={"phx-target": @myself}>
  <div class="p-5">
    <div class="p-4 mb-0 rounded-md bg-info/10">
      <div class="flex">
        <div class="flex-shrink-0">
          <div iconify="heroicons-solid:information-circle" class="w-5 h-5 text-info" aria-hidden="true" />
        </div>
        <div class="flex-1 ml-3 md:flex md:justify-between">
          <p class="text-sm text-info">You can import your web of relationships from others compatible platforms, this is a key feature of the fediverse.</p>
        </div>
      </div>
    </div>

    <div class="flex mt-5  items-start gap-6">
      <span class="w-12 h-12 shrink-0  rounded-full flex place-content-center items-center bg-info/10">
        <b>1</b>
      </span>
      <div class="flex flex-col gap-1" phx-update="ignore">
        <h2 class="font-semibold">{l("Select what kind of data you want to import")}</h2>
        <div class="text-sm text-base-content/70">{l("You can import data that you have previously exported from another instance in CVS format")}</div>
        <Select
          field={:type}
          class="select mt-4  select-bordered w-full max-w-md"
          options={%{
            "" => nil,
            "List of users I follow" => :follows,
            "Users/instances I ghosted" => :ghosts,
            "Users/instances I silenced" => :silences,
            "Users/instances I fully blocked" => :blocks
          }}
        />
      </div>
    </div>

    <div class="mt-10 flex items-start gap-6">
      <span class="w-12 h-12 shrink-0  rounded-full flex place-content-center items-center bg-info/10">
        <b>2</b>
      </span>
      <div class="flex flex-col gap-1">
        <div class="font-semibold">{l("Select the file you want to import")}</div>
        <!-- <FileInput field="file" class="mt-4 file-input file-input-bordered w-full max-w-md" opts={"accepts": ".csv"} /> -->
        <label for={@uploads.file.ref} class="mt-4  w-full max-w-md">
          <span>{l("Upload or drop")}</span>
          {live_file_input(@uploads.file, class: "file-input file-input-bordered")}
        </label>
      </div>
    </div>
    <!-- 
  <div class="mt-10 flex items-start gap-6">
    <span class="w-12 h-12 shrink-0  rounded-full flex place-content-center items-center bg-info/10">
      <b>3</b>
    </span>
    <div class="flex flex-col gap-1">
      <div class="font-semibold">{l("How do you want to use the data")}</div>
      <div class="border mt-3 max-w-md w-full  border-base-content/20 flex flex-col gap-3 rounded-xl p-3 divide-y divide-base-content/20">
        <div class="form-control">
          <label class="label max-w-md w-full cursor-pointer !justify-start gap-4">
            <input type="radio" name="radio-10" class="radio checked:bg-primary" checked>
            <div class="label-text">
              <span class="text-base font-medium">{l("Merge")}</span>
              <p class="text-sm text-base-content/70">{l("Keep existing records and add new ones")}</p>
            </div>
          </label>
        </div>
        <div class="form-control pt-3">
          <label class="label max-w-md cursor-pointer !justify-start gap-4">
            <input type="radio" name="radio-10" class="radio checked:bg-primary">
            <div class="label-text">
              <span class="text-base font-medium">{l("Overwrite")}</span>
              <p class="text-sm text-base-content/70">{l("Replace current records with the new ones")}</p>
            </div>
          </label>
        </div>
      </div>
    </div>
  </div> -->

    <button class="btn mt-12 btn-primary w-full rounded-full normal-case">{l("Upload")}</button>
  </div>
</Form>

<form phx-submit="Bonfire.Me.Profiles:move_in">
  <div x-data="{open: false}" class="p-4" {...pry()}>
    <div x-on:click="open = !open" class="flex items-center justify-between cursor-pointer">
      <div class="flex flex-col gap-1">
        <div class="text-md font-bold">{l("Move from a different profile")}</div>
        <div class="text-sm font-light text-base-content/70">{l(
            "Move from another profile to this one (works across instances, and also with other fediverse tools like Mastodon or Akkoma)"
          )}</div>
      </div>
      <button type="button" x-cloak class="rounded btn btn-square btn-sm btn-ghost" x-show="open">
        <#Icon iconify="fluent:triangle-down-12-filled" class="w-3 h-3 text-base-content/70" />
      </button>
      <button type="button" class="rounded btn btn-square btn-sm btn-ghost" x-show="!open">
        <#Icon iconify="fluent:triangle-right-12-filled" class="w-3 h-3 text-base-content/70" />
      </button>
    </div>
    <div x-show="open" x-cloak x-collapse>
      <div class="prose prose-sm mt-6" />
      <div class="p-4 mt-4 mb-0 rounded-md bg-info/10">
        <div class="flex">
          <div class="flex-shrink-0">
            <#Icon solid="InformationCircle" class="w-5 h-5 text-info" />
          </div>
          <div class="flex-1 ml-3 md:flex md:justify-between">
            <div class="prose prose-sm text-info">
              {markdown(
                l(
                  "If you want to move from another profile to this one (%{username}), here you can create an alias, which you must do *before* you can proceed with moving followers from the old account to this new one. This action by itself is harmless and reversible. After adding the alias here, you need to trigger the actual account migration from the old account.",
                  username: Bonfire.Me.Characters.display_username(current_user(@__context__), true, true)
                )
              )}
            </div>
          </div>
        </div>
      </div>
      <div class="form-control  mt-4 w-full">
        <div class="text-base  font-medium">{l("Existing aliases")}</div>
        <ul>
          <li :for={al <-
            Bonfire.Social.Aliases.list_my_aliases(current_user(@__context__))
            |> e(:edges, [])
            |> debug("list_my_aliases")}>
            <Bonfire.UI.Common.ProfileItemLive
              show_controls={[]}
              character={e(al, :edge, :object, :character, nil) |> debug("my_aliasss")}
              profile={e(al, :edge, :object, :profile, nil)}
              class="btn btn-square btn-ghost btn-sm"
              avatar_class="w-10 h-10 rounded-full"
            />
          </li>
        </ul>
      </div>
      <div class="form-control  mt-4 w-full">
        <div class="text-base  font-medium">{l("Name of your old account")}</div>
        <label class="label">
          <span class="label-text">{markdown(l("Specify the *@username@domain.com* of the account you want to move from"))}</span>
        </label>
        <input name="actor" type="text" placeholder="Type here" class="input input-bordered w-full">

        <button class="w-full rounded-full btn btn-primary mt-4">{l("Add alias")}</button>
      </div>
    </div>
  </div>
</form>
