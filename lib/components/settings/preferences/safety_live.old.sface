<div class="divide-y divide-base-content/20">
  <div class="p-4 font-bold bg-base-content/5">{l("Privacy & Safety")}</div>

  <div
    x-data="{open: false}"
    class="p-4 cursor-pointer"
    :if={@scope != :instance and ActivityPub.Config.federating?() != false}
  >
    <div x-on:click="open = !open" class="flex items-center justify-between gap-4">
      <div class="flex flex-col gap-1">
        <div class="text-sm font-medium">{l("Enable federation?")}</div>
      </div>
      {!-- Alpinejs: If open is true, set x-text to "Expand", otherwise set to "Collapse" --}
      <button type="button" x-cloak class="btn btn-circle btn-sm btn-ghost" x-show="open">
        <#Icon iconify="fluent:triangle-down-12-filled" class="w-3 h-3 text-base-content/70" />
      </button>
      <button type="button" class="btn btn-circle btn-sm btn-ghost" x-show="!open">
        <#Icon iconify="fluent:triangle-right-12-filled" class="w-3 h-3 text-base-content/70" />
      </button>
    </div>
    <div x-show="open" x-cloak x-collapse class="pt-2">
      <form phx-change="Bonfire.Common.Settings:set">
        <input name="scope" value={@scope} type="hidden">
        <div class="divide-y divide-base-content/20">
          <Bonfire.UI.Common.SettingsRadiosLive
            keys={[:activity_pub, :user_federating]}
            options={if ActivityPub.Config.federating?() == nil,
              do: %{
                "nil" => l("Manual: Enable looking up usernames or fetching individual posts or activities"),
                "false" => l("Fully disabled")
              },
              else: %{
                "true" => l("Automatic: Push activities to the fediverse, and accept remote activities"),
                "nil" => l("Manual: Enable looking up usernames or fetching individual posts or activities"),
                "false" => l("Fully disabled")
              }}
          />
        </div>
      </form>
    </div>
  </div>

  <Bonfire.UI.Me.SettingsViewsLive.DiscoverableLive scope={@scope} />
  <Bonfire.UI.Me.SettingsViewsLive.IndexableLive scope={@scope} />

  <div x-data="{open: false}" class="p-4 cursor-pointer">
    <div x-on:click="open = !open" class="flex items-center justify-between gap-4">
      <div class="flex flex-col gap-1">
        <div class="text-sm font-medium">{l("Default boundary")}</div>
        <div class="text-sm font-light text-base-content/70">{l("Specify your default boundary when publishing a new activity")}</div>
      </div>
      <button type="button" x-cloak class="btn btn-circle btn-sm btn-ghost" x-show="open">
        <#Icon iconify="fluent:triangle-down-12-filled" class="w-3 h-3 text-base-content/70" />
      </button>
      <button type="button" class="btn btn-circle btn-sm btn-ghost" x-show="!open">
        <#Icon iconify="fluent:triangle-right-12-filled" class="w-3 h-3 text-base-content/70" />
      </button>
    </div>
    <div x-show="open" x-cloak x-collapse>
      <div data-scope="safety_boundary_default" class="mt-3 border border-base-content/10 rounded-box">
        <StatelessComponent
          module={maybe_component(Bonfire.Boundaries.Web.BoundariesGeneralAccessLive, @__context__)}
          hide_custom
          set_action="Bonfire.Common.Settings:set_default_boundary"
          set_opts={%{"phx-value-scope" => @scope}}
          boundary_preset={Settings.get(
            [:ui, :boundary_preset],
            "public",
            Bonfire.Common.Settings.LiveHandler.scoped(@scope, @__context__)
          )
          |> to_string()}
        />
      </div>
    </div>
  </div>
</div>