<div class="mt-2">
  <div
    x-data="{
        open: false
      }"
    class="p-6 border-t border-base-content/20"
  >
    <div class="flex items-center justify-between" x-on:click="open = !open">
      <div class="flex flex-col gap-1">
        <div class="text-lg font-bold text-base-content">{l("Instance configuration")}</div>
        <div class="text-sm font-light text-base-content/70">{l("View some of the default settings on this instance.")}</div>
      </div>
      <button x-show="!open" type="button" class="normal-case btn-circle btn btn-ghost btn-sm">
        <#Icon solid="ChevronRight" class="w-6 h-6 text-base-content/70" />
      </button>
      <button x-show="open" type="button" class="normal-case btn-circle btn btn-ghost btn-sm">
        <#Icon solid="ChevronDown" class="w-6 h-6 text-base-content/70" />
      </button>
    </div>
    <div x-show="open" x-cloak x-collapse>
      <div class="mt-3 rounded-lg">
        <!-- <div class="py-4">
            <div class="mb-4 text-sm font-medium">{l("Active extensions")}</div>
            {!-- <Bonfire.UI.Common.WidgetAppsLive context={:instance} showing_within={:settings} cols="4" /> --}
          </div> -->

        <div class="border px-4 border-base-content/20 rounded-lg">
          <div class="font-bold bg-base-content/5 -mx-4 p-4">
            {l("General")}
          </div>
          <div class="divide-y divide-base-content/20">
            <div class="py-4">
              <div class="flex items-center justify-between flex-1 items-center gap-4">
                <div class="flex gap-2">
                  <div class="text-sm font-medium">{l("Sign ups")}</div>
                </div>

                {#if !Settings.get(:invite_only, nil, :instance)}
                  <div class="text-success flex items-center gap-2 text-sm font-medium">
                    <#Icon iconify="mdi:check-circle-outline" class="flex-shrink-0 w-4 h-4 text-success" />
                    {l("Open")}
                  </div>
                {#else}
                  <div class="text-base-content flex items-center gap-2 text-sm font-medium">
                    <#Icon iconify="mdi:close-circle-outline" class="flex-shrink-0 w-4 h-4 text-base-content" />
                    {l("Closed")}
                  </div>
                {/if}
              </div>
            </div>

            <div class="py-4">
              <div class="flex items-center justify-between flex-1 items-center gap-4">
                <div class="flex gap-2">
                  <div class="text-sm font-medium">{l("Federation")}</div>
                </div>

                {#case Bonfire.Federate.ActivityPub.federating?()}
                  {#match true}
                    <div class="text-success flex items-center gap-2 text-sm font-medium">
                      <#Icon iconify="mdi:check-circle-outline" class="flex-shrink-0 w-4 h-4 text-success" />
                      {l("Enabled")}
                    </div>
                  {#match nil}
                    <div class="text-success flex items-center gap-2 text-sm font-medium">
                      <#Icon iconify="mdi:check-circle-outline" class="flex-shrink-0 w-4 h-4 text-info" />
                      {l("Manual")}
                    </div>
                  {#match _}
                    <div class="text-base-content flex items-center gap-2 text-sm font-medium">
                      <#Icon iconify="mdi:close-circle-outline" class="flex-shrink-0 w-4 h-4 text-base-content" />
                      {l("Disabled")}
                    </div>
                {/case}
              </div>
            </div>

            <div class="py-4">
              <div class="flex items-center justify-between flex-1 items-center gap-4">
                <div class="flex gap-2">
                  <div class="text-sm font-medium">{l("Language")}</div>
                </div>

                <div class="font-bold text-sm">
                  {Settings.get(
                    [Bonfire.Common.Localise.Cldr, :default_locale],
                    "en",
                    @__context__[:instance_settings] || :instance
                  )}
                </div>
              </div>
            </div>

            <div class="py-4">
              <div class="flex items-center justify-between flex-1 items-center gap-4">
                <div class="flex gap-2">
                  <div class="text-sm font-medium">{l("Font")}</div>
                </div>

                <div class="font-bold text-sm">
                  {Settings.get(
                    [:ui, :font_family],
                    "Inter",
                    @__context__[:instance_settings] || :instance
                  )}
                </div>
              </div>
            </div>

            <div class="py-4">
              <div class="flex items-center justify-between flex-1 items-center gap-4">
                <div class="flex gap-2">
                  <div class="text-sm font-medium">{l("Maximum length of posts")}</div>
                </div>

                <span class="flex-none badge h-[1.75rem] font-medium badge-outline border-base-content/30 rounded">{Bonfire.Common.Settings.get(
                    [Bonfire.UI.Common.SmartInputLive, :max_length],
                    0,
                    @__context__[:instance_settings]
                  )} {l("words")}</span>
              </div>
            </div>

            <div class="py-4">
              <div class="flex items-center justify-between gap-2">
                <div class="flex flex-col gap-1">
                  <div class="text-sm font-medium">{l("What activities to include in home feeds by default")}</div>
                  {!-- <div class="text-sm font-light text-base-content/70">The details used to identify your publication around the web</div> --}
                </div>
              </div>
              <div class="flex flex-wrap gap-3 mt-4 flex-items">
                <div class={
                  "badge h-[1.75rem] gap-2 font-medium badge-outline border-error rounded",
                  "!border-success": true
                }>
                  <#Icon :if={true} iconify="mdi:check-circle-outline" class="flex-shrink-0 w-4 h-4 text-success" />
                  <span class="text-success">{l("Posts and other activities from followed people")}</span>
                </div>
                <div class={
                  "badge h-[1.75rem] gap-2 font-medium badge-outline border-error rounded",
                  "!border-success":
                    Bonfire.Common.Settings.get(
                      [Bonfire.Social.Feeds, :include, :followed_categories],
                      true,
                      :instance
                    )
                }>
                  {#if Bonfire.Common.Settings.get(
                      [Bonfire.Social.Feeds, :include, :followed_categories],
                      true,
                      :instance
                    )}
                    <#Icon iconify="mdi:check-circle-outline" class="flex-shrink-0 w-4 h-4 text-success" />
                  {#else}
                    <#Icon iconify="mdi:close-circle-outline" class="flex-shrink-0 w-4 h-4 text-error" /><span class="sr-only">{l("No")}</span>
                  {/if}
                  <span class={
                    "text-error",
                    "!text-success":
                      Bonfire.Common.Settings.get(
                        [Bonfire.Social.Feeds, :include, :followed_categories],
                        true,
                        :instance
                      )
                  }>{l("Activities from followed groups")}</span>
                </div>
                <div class={
                  "badge h-[1.75rem] gap-2 font-medium badge-outline border-error rounded",
                  "!border-success":
                    Bonfire.Common.Settings.get(
                      [Bonfire.Social.Feeds, :include, :boosts],
                      true,
                      :instance
                    )
                }>
                  {#if Bonfire.Common.Settings.get(
                      [Bonfire.Social.Feeds, :include, :boosts],
                      true,
                      :instance
                    )}
                    <#Icon iconify="mdi:check-circle-outline" class="flex-shrink-0 w-4 h-4 text-success" />
                  {#else}
                    <#Icon iconify="mdi:close-circle-outline" class="flex-shrink-0 w-4 h-4 text-error" /><span class="sr-only">{l("No")}</span>
                  {/if}
                  <span class={
                    "text-error",
                    "!text-success":
                      Bonfire.Common.Settings.get(
                        [Bonfire.Social.Feeds, :include, :boosts],
                        true,
                        :instance
                      )
                  }>{l("Boosts")}</span>
                </div>
                <div class={
                  "badge h-[1.75rem] gap-2 font-medium badge-outline border-error rounded",
                  "!border-success":
                    Bonfire.Common.Settings.get(
                      [Bonfire.Social.Feeds, :include, :reply],
                      true,
                      :instance
                    )
                }>
                  {#if Bonfire.Common.Settings.get(
                      [Bonfire.Social.Feeds, :include, :reply],
                      true,
                      :instance
                    )}
                    <#Icon iconify="mdi:check-circle-outline" class="flex-shrink-0 w-4 h-4 text-success" />
                  {#else}
                    <#Icon iconify="mdi:close-circle-outline" class="flex-shrink-0 w-4 h-4 text-error" /><span class="sr-only">{l("No")}</span>
                  {/if}
                  <span class={
                    "text-error",
                    "!text-success":
                      Bonfire.Common.Settings.get(
                        [Bonfire.Social.Feeds, :include, :reply],
                        true,
                        :instance
                      )
                  }>{l("Replies")}</span>
                </div>
                <div class={
                  "badge h-[1.75rem] gap-2 font-medium badge-outline border-error rounded",
                  "!border-success":
                    Bonfire.Common.Settings.get(
                      [Bonfire.Social.Feeds, :include, :follows],
                      true,
                      :instance
                    )
                }>
                  {#if Bonfire.Common.Settings.get(
                      [Bonfire.Social.Feeds, :include, :follows],
                      true,
                      :instance
                    )}
                    <#Icon iconify="mdi:check-circle-outline" class="flex-shrink-0 w-4 h-4 text-success" />
                  {#else}
                    <#Icon iconify="mdi:close-circle-outline" class="flex-shrink-0 w-4 h-4 text-error" /><span class="sr-only">{l("No")}</span>
                  {/if}
                  <span class={
                    "text-error",
                    "!text-success":
                      Bonfire.Common.Settings.get(
                        [Bonfire.Social.Feeds, :include, :follows],
                        true,
                        :instance
                      )
                  }>{l("Follows")}</span>
                </div>
                <div class={
                  "badge h-[1.75rem] gap-2 font-medium badge-outline border-error rounded",
                  "!border-success":
                    Bonfire.Common.Settings.get(
                      [Bonfire.Social.Feeds, :include, :outbox],
                      true,
                      :instance
                    )
                }>
                  {#if Bonfire.Common.Settings.get(
                      [Bonfire.Social.Feeds, :include, :outbox],
                      true,
                      :instance
                    )}
                    <#Icon iconify="mdi:check-circle-outline" class="flex-shrink-0 w-4 h-4 text-success" />
                  {#else}
                    <#Icon iconify="mdi:close-circle-outline" class="flex-shrink-0 w-4 h-4 text-error" /><span class="sr-only">{l("No")}</span>
                  {/if}
                  <span class={
                    "text-error",
                    "!text-success":
                      Bonfire.Common.Settings.get(
                        [Bonfire.Social.Feeds, :include, :outbox],
                        true,
                        :instance
                      )
                  }>{l("My own activities")}</span>
                </div>
                <div class={
                  "badge h-[1.75rem] gap-2 font-medium badge-outline border-error rounded",
                  "!border-success":
                    Bonfire.Common.Settings.get(
                      [Bonfire.Social.Feeds, :include, :notifications],
                      true,
                      :instance
                    )
                }>
                  {#if Bonfire.Common.Settings.get(
                      [Bonfire.Social.Feeds, :include, :notifications],
                      true,
                      :instance
                    )}
                    <#Icon iconify="mdi:check-circle-outline" class="flex-shrink-0 w-4 h-4 text-success" />
                  {#else}
                    <#Icon iconify="mdi:close-circle-outline" class="flex-shrink-0 w-4 h-4 text-error" /><span class="sr-only">{l("No")}</span>
                  {/if}
                  <span class={
                    "text-error",
                    "!text-success":
                      Bonfire.Common.Settings.get(
                        [Bonfire.Social.Feeds, :include, :notifications],
                        true,
                        :instance
                      )
                  }>{l("Notifications")}</span>
                </div>
                <div class="badge h-[1.75rem] gap-2 font-medium badge-outline border-error rounded">
                  <#Icon iconify="mdi:close-circle-outline" class="flex-shrink-0 w-4 h-4 text-error" />
                  <span class="text-error"><span class="sr-only">{l("No")}</span> {l("Messages")}</span>
                </div>
              </div>
            </div>
          </div>
        </div>

        <div class="border px-4 mt-4 border-base-content/20 rounded-lg">
          <div class="font-bold bg-base-content/5 -mx-4 p-4">
            {l("Look & feel")}
          </div>
          <div class="divide-y divide-base-content/20">
            <div class="py-4">
              <div class="flex items-center justify-between flex-1 items-center gap-4">
                <div class="flex gap-2">
                  <div class="text-sm font-medium">{l("Theme")}</div>
                </div>

                <div class="font-bold text-sm">{Config.get([:ui, :theme, :instance_theme], "bonfire")}</div>
              </div>
            </div>

            <div class="py-4">
              <div class="flex items-center justify-between items-center gap-4">
                {!-- {#if Bonfire.Common.Settings.get(
                      [Bonfire.UI.Common.AvatarLive, :animal_avatars],
                      true,
                      :instance
                    )}
                    <#Icon iconify="mdi:check-circle-outline" class="flex-shrink-0 w-4 h-4 text-success" />
                  {#else}
                    <#Icon iconify="mdi:close-circle-outline" class="flex-shrink-0 w-4 h-4 text-error" />
                  {/if} --}
                <div class="flex flex-col gap-0">
                  <div class="text-sm font-medium">{l("Default avatars")}</div>
                  <div class="text-sm font-light text-base-content/70">{l("What to show for users without a profile picture")}</div>
                </div>
                <Bonfire.UI.Common.AvatarLive
                  class="w-14 h-14 border-base-content/30 border rounded"
                  parent_id="about"
                />
              </div>
            </div>
          </div>
        </div>

        <div class="border px-4 mt-4 border-base-content/20 rounded-lg">
          <div class="font-bold bg-base-content/5 -mx-4 p-4">
            {l("Privacy")}
          </div>
          <div class="divide-y divide-base-content/20">
            <div class="py-4">
              <div class="flex items-center justify-between gap-2">
                <div class="flex gap-1 justify-between flex-1 items-center">
                  <div class="text-sm flex-1 font-medium">{l("Who can see the list of local users")}
                  </div>
                  <span class="badge h-[1.75rem] font-medium border-base-content/30 badge-outline rounded">{Bonfire.Common.Settings.get([Bonfire.UI.Me.UsersDirectoryLive, :show_to], :users, :instance)}</span>
                </div>
              </div>
            </div>

            {!-- <div class="py-4">
                <div class="flex items-center justify-between flex-1 items-center gap-4">
                  <div class="flex gap-2">
                    <div class="text-sm font-medium">{l("Show list of admins on public homepage")}</div>
                  </div>

                  {#if Bonfire.Common.Settings.get([Bonfire.UI.Me.WidgetUsersLive, :show_guests], true, :instance)}
                    <div class="text-success flex items-center gap-2 text-sm font-medium">
                      <#Icon iconify="mdi:check-circle-outline" class="flex-shrink-0 w-4 h-4 text-success" />
                      {l("Enabled")}
                    </div>
                  {#else}
                    <div class="text-base-content flex items-center gap-2 text-sm font-medium">
                      <#Icon iconify="mdi:close-circle-outline" class="flex-shrink-0 w-4 h-4 text-base-content" />
                      {l("Disabled")}
                    </div>
                  {/if}
                </div>
              </div> --}

            <div class="py-4">
              <div class="flex items-center justify-between flex-1 items-center gap-4">
                <div class="flex gap-2">
                  <div class="text-sm font-medium">{l("Default boundary for new posts")}</div>
                </div>

                <div class="font-bold text-sm">{case Bonfire.Boundaries.default_boundaries() do
                    [{_, name}] -> name
                    {_, name} -> name
                    nil -> l("Public")
                    name -> name
                  end}</div>
              </div>
            </div>
          </div>
        </div>

        <div class="border px-4 mt-4 border-base-content/20 rounded-lg">
          <div class="font-bold bg-base-content/5 -mx-4 p-4">
            {l("Potentially addictive or distracting")}
          </div>
          <div class="divide-y divide-base-content/20">
            <div class="py-4">
              <div class="flex items-center justify-between flex-1 items-center gap-4">
                <div class="flex gap-2">
                  <div class="text-sm font-medium">{l("Infinite scrolling")}</div>
                </div>
                <div class="font-bold text-sm">{case Config.get([:ui, :infinite_scroll], :preload) do
                    true -> l("Enabled")
                    :preload -> l("Manual")
                    _ -> l("Disabled")
                  end}</div>
              </div>
            </div>

            <div class="py-4">
              <div class="flex items-center justify-between flex-1 items-center gap-4">
                <div class="flex gap-2">
                  <div class="text-sm font-medium">{l("Highlight the unread notification indicator")}</div>
                </div>
                <div class="font-bold text-sm">{if Config.get([Bonfire.UI.Common.BadgeCounterLive, :highlight]) == true,
                    do: l("Enabled"),
                    else: l("Disabled")}</div>
              </div>
            </div>
          </div>
        </div>

        <div class="border px-4 mt-4 border-base-content/20 rounded-lg">
          <div class="font-bold bg-base-content/5 -mx-4 p-4">
            {l("Vanity metrics")}
          </div>
          <div class="divide-y divide-base-content/20">
            <div class="py-4">
              <div class="flex items-center justify-between flex-1 items-center gap-4">
                <div class="flex gap-2">
                  <div class="text-sm font-medium">{l("Show reaction counts (likes/boosts)")}</div>
                </div>
                <div class="font-bold text-sm">{if Config.get([:ui, :show_activity_counts]) == true, do: l("Enabled"), else: l("Disabled")}</div>
              </div>
            </div>

            {!-- <div class="py-4">
                <div class="flex items-center justify-between flex-1 items-center gap-4">
                  <div class="flex gap-2">
                    <div class="text-sm font-medium">{l("Show follower counts")}</div>
                  </div>
                  <div class="font-bold text-sm">{if Config.get([:ui, :show_activity_counts])==true, do: l("Disabled"), else: l("Disabled")}</div>
                </div>
              </div> --}

            <div class="py-4">
              <div class="flex items-center justify-between flex-1 items-center gap-4">
                <div class="flex flex-col">
                  <div class="text-sm font-medium">{l("Show the number of total users on this instance")}</div>
                </div>

                {#if Bonfire.Common.Settings.get([Bonfire.Me.Users, :public_count], true, :instance)}
                  <div class="text-success flex items-center gap-2 text-sm font-medium">
                    <#Icon iconify="mdi:check-circle-outline" class="flex-shrink-0 w-4 h-4 text-success" />
                    {l("Enabled")}
                  </div>
                {#else}
                  <div class="text-base-content flex items-center gap-2 text-sm font-medium">
                    <#Icon iconify="mdi:close-circle-outline" class="flex-shrink-0 w-4 h-4 text-base-content" />
                    {l("Disabled")}
                  </div>
                {/if}
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
