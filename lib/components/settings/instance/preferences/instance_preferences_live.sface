<div class="pb-6">
  {#if Bonfire.Me.Users.is_admin?(@current_user) ||
      Bonfire.Boundaries.can?(@__context__, :describe, :instance)}
    <div class="!mt-8 m-3 text-xs font-medium tracking-wide uppercase text-base-content/70">{l("Appearance")}</div>

    <div class="m-3 divide-y rounded-lg bg-base-content/5 divide-base-300">
      <div x-data="{open: false}" class="p-4">
        <div class="flex items-center justify-between">
          <div class="flex flex-col gap-1">
            <div class="text-sm font-bold">{l("Name & description")}</div>
            <div class="text-sm font-light text-base-content/70">{l("Identify this instance")}</div>
          </div>
          <button
            type="button"
            x-cloak
            x-on:click="open = !open"
            class="rounded btn btn-square btn-sm btn-ghost"
            x-show="open"
          >
            <Icon iconify="fluent:triangle-down-12-filled" class="w-3 h-3 text-base-content/70" />
          </button>
          <button
            type="button"
            x-on:click="open = !open"
            class="rounded btn btn-square btn-sm btn-ghost"
            x-show="!open"
          >
            <Icon iconify="fluent:triangle-right-12-filled" class="w-3 h-3 text-base-content/70" />
          </button>
        </div>
        <div x-show="open" x-collapse>
          <form name="settings" phx-submit="Bonfire.Me.Settings:save">
            <input name="scope" value={:instance} type="hidden">

            <div class="w-full mt-6 form-control">
              <label for="instance_name" class="label">
                <span class="label-text text-base-content/70">{l("The name of your instance")}</span>
              </label>
              <div class="mt-1 mb-4 sm:mt-0 sm:col-span-2">
                <div class="flex">
                  <input
                    type="text"
                    name="ui[theme][instance_name]"
                    id="instance_name"
                    value={Bonfire.Me.Settings.get([:bonfire, :ui, :theme, :instance_name], "")}
                    class="w-full h-10 input bg-base-content/10"
                  />
                </div>
              </div>
            </div>

            <div class="w-full max-w-lg mt-2 form-control">
              <label for="instance_description" class="label">
                <span class="label-text text-base-content/70">{l("A short summary shown in various places")}</span>
              </label>

              <textarea
                id="instance_description"
                name="ui[theme][instance_description]"
                rows="3"
                class="w-full h-24 textarea bg-base-content/10"
              >{Bonfire.Me.Settings.get([:bonfire, :ui, :theme, :instance_description], "")}</textarea>
            </div>
            <div class="mt-3">
              <button type="submit" class="normal-case btn-wide btn btn-sm btn-primary">
                {l("Save")}
              </button>
            </div>
          </form>
        </div>
      </div>

      <form phx-change="Bonfire.Me.Profiles:validate" name="images">
        <input name="scope" value={:instance} type="hidden">

        <div x-data="{open: false}" class="p-4">
          <div class="flex items-center justify-between">
            <div class="flex flex-col gap-1">
              <div class="text-sm font-bold">{l("Icon & banner")}</div>
              <div class="text-sm font-light text-base-content/70">{l("Provide some visuals")}</div>
            </div>
            <button
              type="button"
              x-cloak
              x-on:click="open = !open"
              class="rounded btn btn-square btn-sm btn-ghost"
              x-show="open"
            >
              <Icon iconify="fluent:triangle-down-12-filled" class="w-3 h-3 text-base-content/70" />
            </button>
            <button
              type="button"
              x-on:click="open = !open"
              class="rounded btn btn-square btn-sm btn-ghost"
              x-show="!open"
            >
              <Icon iconify="fluent:triangle-right-12-filled" class="w-3 h-3 text-base-content/70" />
            </button>
          </div>
          <div x-show="open" x-collapse>
            <div class="w-full max-w-lg mt-8 form-control">
              <label for="photo" class="label">
                <span class="label-text text-base-content/70">
                  {l("Instance icon")}</span>
              </label>
              <div data-id="upload_icon" phx-drop-target={@uploads.icon.ref} class="mt-1 sm:mt-0 sm:col-span-2">
                <div class="flex items-center">
                  <span class="w-12 h-12 overflow-hidden rounded-full bg-base-100">
                    <img
                      class="object-contain w-full h-full"
                      src={Bonfire.Me.Settings.get([:bonfire, :ui, :theme, :instance_icon], "")}
                    />
                  </span>
                  <label for={@uploads.icon.ref} class="ml-3 normal-case btn btn-sm btn-outline">
                    {l("Change")}
                    {live_file_input(@uploads.icon, class: "sr-only")}
                  </label>
                </div>
              </div>
            </div>

            <div class="w-full max-w-lg mt-2 form-control">
              <label for="cover-photo" class="label">
                <span class="label-text text-base-content/70">{l("Cover image")}</span>
              </label>
              <div class="mt-1 sm:mt-0 sm:col-span-2">
                <div
                  data-id="upload_image"
                  phx-drop-target={@uploads.image.ref}
                  class="flex justify-center max-w-lg p-2 border-2 border-dashed rounded-md border-base-content/30"
                >
                  <div class="space-y-2 text-center">
                    <img
                      class="w-full h-auto mx-auto"
                      src={Bonfire.Me.Settings.get([:bonfire, :ui, :theme, :instance_image], "")}
                    />
                    <div class="flex items-center w-full text-sm text-center text-base-content/70 place-content-center">
                      <label for={@uploads.image.ref} class="btn btn-xs btn-secondary">
                        <span>{l("Upload an image")}</span>
                        {live_file_input(@uploads.image, class: "sr-only")}
                      </label>
                      <p class="pl-1">{l("or drag and drop")}</p>
                    </div>
                    <p class="text-xs text-base-content text-opacity-70">
                      {#if length(@uploads.image.entries) > 0}
                        {#for entry <- @uploads.image.entries}
                          {entry.client_name} - {entry.progress}%
                        {/for}
                      {#else}
                        {l("PNG, JPG, GIF up to 10MB")}
                      {/if}
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </form>

      <div x-data="{open: false}" class="p-4">
        <div class="flex items-center justify-between">
          <div class="flex flex-col gap-1">
            <div class="text-sm font-bold">{l("Theme & font")}</div>
            <div class="text-sm font-light text-base-content/70">{l("Customise the look and feel")}</div>
          </div>
          <button
            type="button"
            x-cloak
            x-on:click="open = !open"
            class="rounded btn btn-square btn-sm btn-ghost"
            x-show="open"
          >
            <Icon iconify="fluent:triangle-down-12-filled" class="w-3 h-3 text-base-content/70" />
          </button>
          <button
            type="button"
            x-on:click="open = !open"
            class="rounded btn btn-square btn-sm btn-ghost"
            x-show="!open"
          >
            <Icon iconify="fluent:triangle-right-12-filled" class="w-3 h-3 text-base-content/70" />
          </button>
        </div>
        <div x-show="open" x-collapse>
          <form name="settings" phx-change="Bonfire.Me.Settings:set">
            <input name="scope" value={:instance} type="hidden">
            <div class="w-full mt-4 form-control">
              <label for="instance_theme" class="label">
                <span class="label-text text-base-content/70">
                  {l("Instance default theme")}</span>
              </label>
              <Bonfire.UI.Common.ChangeThemesLive
                scope={:instance}
                scoped={:instance}
                theme={Config.get([:ui, :theme, :instance_theme], "bonfire")}
                theme_light={Config.get([:ui, :theme, :instance_theme_light], "light")}
              />
            </div>

            <div class="w-full mt-2 form-control">
              <label for="font_family" class="label">
                <span class="label-text text-base-content/70">
                  {l("Default font")}</span>
              </label>
              <div class="mt-1 sm:mt-0 sm:col-span-2">
                <Bonfire.UI.Common.ChangeFontLive font_family={Settings.get([:ui, :font_family], "Inter", :instance)} />
              </div>
            </div>
          </form>
        </div>
      </div>

      <div x-data="{open: false}" class="p-4">
        <div class="flex items-center justify-between">
          <div class="flex flex-col gap-1">
            <div class="text-sm font-bold">{l("Language")}</div>
            <div class="text-sm font-light text-base-content/70">{l("What language do most new users understand?")}</div>
          </div>
          <button
            type="button"
            x-cloak
            x-on:click="open = !open"
            class="rounded btn btn-square btn-sm btn-ghost"
            x-show="open"
          >
            <Icon iconify="fluent:triangle-down-12-filled" class="w-3 h-3 text-base-content/70" />
          </button>
          <button
            type="button"
            x-on:click="open = !open"
            class="rounded btn btn-square btn-sm btn-ghost"
            x-show="!open"
          >
            <Icon iconify="fluent:triangle-right-12-filled" class="w-3 h-3 text-base-content/70" />
          </button>
        </div>
        <div x-show="open" x-collapse>
          <form name="settings" phx-change="Bonfire.Me.Settings:set">
            <input name="scope" value={:instance} type="hidden">
            <div class="w-full max-w-lg mt-8 form-control">
              <label for="default" class="label">
                <span class="label-text text-base-content/70">
                  {l("Default language")}</span>
              </label>
              <div class="mt-1 sm:mt-0 sm:col-span-2">
                <Bonfire.UI.Common.ChangeLocaleLive locale={Settings.get([Bonfire.Common.Localise.Cldr, :default_locale], "en", :instance)} />
              </div>
            </div>
          </form>
        </div>
      </div>
    </div>
    <!-- </form> -->

    <div class="!mt-8 m-3 text-xs tracking-wide uppercase text-base-content/70 font-medium">{l("Default behaviours")}</div>
    <form name="settings" phx-change="Bonfire.Me.Settings:set">
      <input name="scope" value={:instance} type="hidden">
      <div class="m-3 divide-y rounded-lg bg-base-content/5 divide-base-300">
        <div class="p-4">
          <div class="flex items-center justify-between">
            <div class="flex flex-col gap-1">
              <div class="text-sm font-bold">{l("Make invite only")}</div>
              <div class="text-sm font-light text-base-content/70">{l("Only people with a valid invite link can sign up to this instance.")}</div>
            </div>
            <input name="invite_only" value="false" type="hidden">
            <input
              name="invite_only"
              value="true"
              type="checkbox"
              checked={if Settings.get(:invite_only, nil, :instance), do: "checked"}
              class="toggle"
            />
          </div>
        </div>

        <div class="p-4">
          <div class="flex items-center justify-between">
            <div class="flex flex-col gap-1">
              <div class="text-sm font-bold">{l("Show list of admins on public homepage")}</div>
              <div class="text-sm font-light text-base-content/70">{l("Show list of admins on public homepage")}</div>
            </div>
            <input name="Bonfire.UI.Me.WidgetUsersLive[show_guests]" value="false" type="hidden">
            <input
              name="Bonfire.UI.Me.WidgetUsersLive[show_guests]"
              value="true"
              type="checkbox"
              checked={if Bonfire.Me.Settings.get([Bonfire.UI.Me.WidgetUsersLive, :show_guests], true, :instance),
                do: "checked"}
              class="toggle"
            />
          </div>
        </div>

        <div class="p-4">
          <div class="flex items-center justify-between">
            <div class="flex flex-col gap-1">
              <div class="text-sm font-bold">{l("Hide the number of total users on this instance")}</div>
              <div class="text-sm font-light text-base-content/70">{l("Hide the number of total users on this instance")}</div>
            </div>
            <input name="Bonfire.Me.Users[public_count]" value="true" type="hidden">
            <input
              name="Bonfire.Me.Users[public_count]"
              value="false"
              type="checkbox"
              checked={if !Bonfire.Me.Settings.get([Bonfire.Me.Users, :public_count], true, :instance), do: "checked"}
              class="toggle"
            />
          </div>
        </div>

        <Bonfire.UI.Common.AvatarsSettingsLive scope={:instance} />

        <div x-data="{open: false}" class="p-4">
          <div class="flex items-center justify-between">
            <div class="flex flex-col gap-1">
              <div class="text-sm font-bold">{l("Who can see the list of local users?")}</div>
              <!-- <div class="text-sm font-light text-base-content/70">The details used to identify your publication around the web</div> -->
            </div>
            <button
              type="button"
              x-cloak
              x-on:click="open = !open"
              class="rounded btn btn-square btn-sm btn-ghost"
              x-show="open"
            >
              <Icon iconify="fluent:triangle-down-12-filled" class="w-3 h-3 text-base-content/70" />
            </button>
            <button
              type="button"
              x-on:click="open = !open"
              class="rounded btn btn-square btn-sm btn-ghost"
              x-show="!open"
            >
              <Icon iconify="fluent:triangle-right-12-filled" class="w-3 h-3 text-base-content/70" />
            </button>
          </div>
          <div x-show="open" x-collapse>
            <div class="mt-4 sm:col-span-2">
              <fieldset>
                <div class="flex flex-col gap-4 -space-y-px">
                  <label class="relative flex items-center flex-1 border-r cursor-pointer border-base-200 focus:outline-none">
                    <input
                      type="radio"
                      name="Bonfire.UI.Me.UsersDirectoryLive[show_to]"
                      value="guests"
                      checked={if Bonfire.Me.Settings.get([Bonfire.UI.Me.UsersDirectoryLive, :show_to], :users, :instance) ==
                           :guests,
                         do: "checked"}
                      class="radio radio-secondary"
                    />
                    <div class="flex flex-col ml-3">
                      <!-- Checked: "text-indigo-900", Not Checked: "text-primary-content-900" -->
                      <span id="admin-info-0-label" class="block text-sm font-medium">
                        {l("Guests")}
                      </span>
                    </div>
                  </label>

                  <label class="relative flex items-center flex-1 cursor-pointer focus:outline-none">
                    <input
                      type="radio"
                      name="Bonfire.UI.Me.UsersDirectoryLive[show_to]"
                      value="users"
                      checked={if Bonfire.Me.Settings.get([Bonfire.UI.Me.UsersDirectoryLive, :show_to], :users, :instance) ==
                           :users,
                         do: "checked"}
                      class="radio radio-secondary"
                    />
                    <div class="flex flex-col ml-3">
                      <span id="admin-info-2-label" class="block text-sm font-medium">
                        {l("Users")}
                      </span>
                    </div>
                  </label>

                  <label class="relative flex items-center flex-1 cursor-pointer focus:outline-none">
                    <input
                      type="radio"
                      name="Bonfire.UI.Me.UsersDirectoryLive[show_to]"
                      value="false"
                      checked={if !Bonfire.Me.Settings.get([Bonfire.UI.Me.UsersDirectoryLive, :show_to], :users), do: "checked"}
                      class="radio radio-secondary"
                    />
                    <div class="flex flex-col ml-3">
                      <span id="admin-info-2-label" class="block text-sm font-medium">
                        {l("Admins")}
                      </span>
                    </div>
                  </label>
                </div>
              </fieldset>
            </div>
          </div>
        </div>

        <div x-data="{open: false}" class="p-4">
          <div class="flex items-center justify-between">
            <div class="flex flex-col gap-1">
              <div class="text-sm font-bold">{l("What activities to include in home feeds by default")}</div>
              <!-- <div class="text-sm font-light text-base-content/70">The details used to identify your publication around the web</div> -->
            </div>
            <button
              type="button"
              x-cloak
              x-on:click="open = !open"
              class="rounded btn btn-square btn-sm btn-ghost"
              x-show="open"
            >
              <Icon iconify="fluent:triangle-down-12-filled" class="w-3 h-3 text-base-content/70" />
            </button>
            <button
              type="button"
              x-on:click="open = !open"
              class="rounded btn btn-square btn-sm btn-ghost"
              x-show="!open"
            >
              <Icon iconify="fluent:triangle-right-12-filled" class="w-3 h-3 text-base-content/70" />
            </button>
          </div>
          <div x-show="open" x-collapse>
            <Dynamic.Component
              :if={module_enabled?(Bonfire.UI.Social.Settings.MyFeedItemsLive, @__context__)}
              module={Bonfire.UI.Social.Settings.MyFeedItemsLive}
              title={l("What activities to include in home feeds by default")}
              scope={:instance}
            />
          </div>
        </div>
      </div>

      <div class="!mt-8 m-3 text-xs tracking-wide uppercase text-base-content/70 font-medium">{l("Advanced settings")}</div>
      <div class="m-3 divide-y rounded-lg bg-base-content/5 divide-base-300">
        <div class="p-4">
          <div class="flex items-center justify-between">
            <div class="flex flex-col gap-1">
              <div class="text-sm font-bold">{l("Enable federation")}</div>
              <div class="text-sm font-light text-base-content/70">
                {l("Push local activities to the fediverse, and accept remote activities")}</div>
            </div>
            <input name="activity_pub[instance][federating]" value="false" type="hidden">
            <input
              name="activity_pub[instance][federating]"
              value="true"
              type="checkbox"
              checked={if Bonfire.Me.Settings.get([:activity_pub, :instance, :federating], true, :instance),
                do: "checked"}
              class="toggle"
            />
          </div>
        </div>

        <Bonfire.UI.Me.SettingsViewsLive.DiscoverableLive
          label={l(
            "New users and their content should appear publicly in search engines (in Bonfire, the fediverse, and the web in general) by default (this can be overriden by each user)"
          )}
          scope={:instance}
        />
      </div>
    </form>
  {#else}
    {l("You don't have permission to describe the instance, sorry!")}
  {/if}
</div>
