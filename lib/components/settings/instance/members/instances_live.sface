<div>
  <div class="grid mb-2 px-4 md:px-0 md:grid-cols-2 gap-4 max-w-screen-md mx-auto w-full">
    <div
      :for={%{id: id, ap_base_uri: ap_base_uri, display_hostname: display_hostname} = instance <- @instances}
      class="p-4 border rounded border-base-content/10 flex"
    >
      <!-- TODO: link to member directory in settings instead -->
      <div>{display_hostname}</div>

      {#case {e(instance, :ghosted_instance_wide?, nil), e(instance, :silenced_instance_wide?, nil)}}
        {#match {nil, nil}}
          <span class="btn btn-xs  normal-case loading btn-disabled">{l("loading")}</span>
        {#match {true, true}}
          <span class="badge badge-sm badge-error">{l("Blocked")}</span>
        {#match {true, _}}
          <span class="badge badge-sm badge-warning">{l("Ghosted")}</span>
        {#match {_, true}}
          <span class="badge badge-sm badge-warning">{l("Silenced")}</span>
        {#match {_, _}}
          <span class="badge badge-sm badge-info">{l("Active")}</span>
      {/case}

      <div class="dropdown dropdown-end">
        <label
          class="relative btn btn-circle btn-outline border-base-content/30 btn-sm"
          tabindex="0"
          id="user-profile-menu"
          aria-haspopup="true"
          aria-expanded="true"
        >
          <#Icon iconify="material-symbols:more-horiz" class="w-5 h-5" />
        </label>
        <ul
          tabindex="0"
          class="relative z-50 mt-3  p-0.5 menu shadow-xl bg-base-100 border rounded border-base-content/5 !block w-52 menu dropdown-content"
          role="menu"
          aria-orientation="vertical"
          aria-labelledby="user-profile-menu"
        >
          <li><LinkLive to={"/users/instance/#{display_hostname}/#{id}"} class="grow">{l("View known users from instance")}</LinkLive></li>
          <li><a href={ap_base_uri} target="_blank"><#Icon iconify="heroicons-solid:external-link" class="w-4 h-4" /> {l("Visit instance")}</a></li>
          <li>
            <StatelessComponent
              module={maybe_component(Bonfire.Boundaries.Web.BlockButtonLive, @__context__)}
              object={instance}
              parent_id="instances"
              type={:block}
              hide_icon
              is_local_user={false}
              open_btn_wrapper_class="w-full"
              label={display_hostname}
              open_btn_label={if e(instance, :ghosted_instance_wide?, nil) && e(instance, :silenced_instance_wide?, nil) do
                l("Unblock")
              else
                l("Block")
              end}
              class="text-error"
            />
          </li></ul>
      </div>
    </div>
  </div>

  <Bonfire.UI.Common.LoadMoreLive
    :if={@page_info}
    live_handler={__MODULE__}
    target={@myself}
    page_info={@page_info}
    hide_guest_fallback
  />
</div>