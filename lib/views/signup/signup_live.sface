<div class="w-full mt-8 md:mt-24" id="signup">
  {!-- <Bonfire.UI.Common.LogoLinkLive
    container_class=""
    image_class="mt-12 mb-6 mx-auto w-12 h-12 bg-center bg-no-repeat bg-cover"
    with_name={false}
    href="/"
  /> --}
  <Bonfire.UI.Common.LogoLinkLive
    with_name
    container_class="flex items-center mb-8 justify-center gap-2"
    name_class="text-2xl font-bold tracking-wider"
    href="/"
  />
  {#if @registered}
    <div class="max-w-[680px] mx-auto">
      <div class="">
        <div class="w-[90%] md:w-[360px] mx-auto p-3 rounded-xl border border-base-content/20">
          <div class="flex flex-col place-content-center">
            <div class="flex-shrink-0 text-3xl place-content-center items-center text-center">
              ðŸŽ‰ðŸŽ‰ðŸŽ‰
            </div>
            <div class="flex-col flex-1 md:flex md:justify-between text-center">
              <h3 class="text-xl font-bold text-base-content mt-4">{l("Hooray! You are registered")}</h3>
              <div class="mt-2 text-base text-base-content/70" data-id="confirmation_success">
                {#if @registered == :check_email}
                  {l(
                    "Now we need you to confirm your email address. We've emailed you a link (check your spam folder!). Please click on it to continue."
                  )}
                {#else}
                  {l("You can now log in.")}
                {/if}
              </div>
              <LiveRedirect
                class="mt-6 btn btn-outline btn-primary normal-case"
                to={path(Config.get!(:home_page))}
              >
                {l("Back to home page")}
              </LiveRedirect>
            </div>
          </div>
        </div>
      </div>
    </div>
  {#else}
    {#if Bonfire.Me.Accounts.instance_is_invite_only?() && !@invite}
      <div role="status" class="my-4 alert alert-warning">
        <div class="flex">
          <div class="whitespace-normal">
            {l("This instance is currently invite-only.")}
          </div>
        </div>
      </div>
    {#else}
      <!-- <ul class="steps">
        <li data-content="" class="step step-primary">Our Code of Conduct</li>
        <li data-content="" class="step step-neutral">Signup</li>
      </ul> -->
      <div class="grid items-start gap-4 md:grid-cols-2">
        <div class="w-[90%] md:w-full mx-auto md:mx-0 md:pb-4" x-data="{ active: 1 }">
          <div class="shadow rounded-xl bg-base-100">
            <div
              class="bg-center rounded-t-xl mx-auto bg-no-repeat bg-cover h-[250px] w-full"
              style={"background-image: url(#{Config.get([:ui, :theme, :instance_image], nil)})"}
            />
            <h1 class="p-4 font-medium leading-relaxed tracking-wider text-center text-md text-base-content/90">
              {Config.get([:ui, :theme, :instance_description], "")}
            </h1>

            {#case Config.get([:terms, :conduct], nil)}
              {#match terms when is_binary(terms)}
                <div
                  x-data="{
                  id: 0,
                  get expanded() {
                      return this.active === this.id
                  },
                  set expanded(value) {
                      this.active = value ? this.id : null
                  },
                }"
                  role="region"
                  class="border-t border-b border-base-content/20"
                >
                  <button
                    x-on:click="expanded = !expanded"
                    :aria-expanded="expanded"
                    class="flex items-center justify-between w-full px-6 py-2 text-lg font-semibold"
                  >
                    <span>{l("Read our code of conduct")}</span>
                    <span x-show="expanded" aria-hidden="true" class="ml-4">&minus;</span>
                    <span x-show="!expanded" aria-hidden="true" class="ml-4">&plus;</span>
                  </button>

                  <div x-cloak x-show="expanded" x-collapse>
                    <div class="p-3 prose">
                      {templated_or_remote_markdown(terms)}
                    </div>
                  </div>
                </div>
              {#match _}
            {/case}

            {#case Config.get([:terms, :privacy], nil)}
              {#match terms when is_binary(terms)}
                <div
                  x-data="{
                  id: 2,
                  get expanded() {
                      return this.active === this.id
                  },
                  set expanded(value) {
                      this.active = value ? this.id : null
                  },
                }"
                  role="region"
                  class=""
                >
                  <h2>
                    <button
                      x-on:click="expanded = !expanded"
                      :aria-expanded="expanded"
                      class="flex items-center justify-between w-full px-6 py-2 text-lg font-semibold"
                    >
                      <span>{l("Read our privacy policy")}</span>
                      <span x-show="expanded" aria-hidden="true" class="ml-4">&minus;</span>
                      <span x-show="!expanded" aria-hidden="true" class="ml-4">&plus;</span>
                    </button>
                  </h2>

                  <div x-cloak x-show="expanded" x-collapse>
                    <div class="p-3 prose">
                      {templated_or_remote_markdown(terms)}
                    </div>
                  </div>
                </div>
              {#match _}
            {/case}
          </div>
        </div>

        <div class="w-[90%] md:w-[360px] mx-auto md:mx-0 sticky top-4">
          <Bonfire.UI.Me.SignupFormLive
            form={@form}
            error={@error}
            auth_second_factor_secret={@auth_second_factor_secret}
          />
        </div>
      </div>
    {/if}
  {/if}
</div>
