{!-- <div class="grid gap-8 grid-cols-[280px_1fr]">
  <div class="sticky top-[56px] -ml-4 overflow-y-auto border-r bg-base-200 widget border-base-content/10">
    <nav class="" role="navigation" aria-label={l("Instance  navigation")}>
      <Bonfire.UI.Common.InstanceSidebarSettingsNavLive selected_tab={@selected_tab} />
    </nav>
  </div> --}
<section class="">
  {#case @selected_tab}
    {#match "dashboard"}
      <Bonfire.UI.Me.SettingsViewsLive.InstanceConfigLive selected_tab={@selected_tab} />
    {#match "about"}
      <Bonfire.UI.Me.SettingsViewsLive.InstanceAboutLive selected_tab={@selected_tab} />
    {#match "configuration"}
      <Bonfire.UI.Me.SettingsViewsLive.InstanceConfigLive selected_tab={@selected_tab} />
    {#match "preferences"}
      <Bonfire.UI.Me.SettingsViewsLive.PreferencesLive
        selected_tab={@selected_tab}
        id={@id}
        scope={:instance}
      />
      {!-- {#match "navigation"}
        <Bonfire.UI.Me.SettingsViewsLive.InstanceNavigationLive selected_tab={@selected_tab} /> --}
    {#match "extensions"}
      <Bonfire.UI.Common.ExtensionsLive scope={:instance} />
    {#match "flags"}
      <StatefulComponent
        module={maybe_component(Bonfire.UI.Moderation.FlagsLive)}
        id="flags"
        selected_tab={@selected_tab}
        scope={:instance}
      />
    {#match "silenced"}
      <Bonfire.Boundaries.Web.BlocksLive id="blocks" selected_tab="silenced" />
    {#match "ghosted"}
      <Bonfire.Boundaries.Web.BlocksLive id="blocks" selected_tab="ghosted" />
    {#match "terms"}
      <Bonfire.UI.Me.SettingsViewsLive.TermsLive selected_tab={@selected_tab} />
    {#match "invites"}
      <StatefulComponent
        module={Config.get([:ui, :invites_component], Bonfire.Invite.Links.Web.InvitesLive)}
        id="admin_invites"
        selected_tab={@selected_tab}
      />
    {#match "posts"}
      <Bonfire.UI.Me.SettingsViewsLive.InstancePostsLive
        id={:instance_posts}
        selected_tab={@selected_tab}
      />
      {!-- {#match "flags"}
        <Bonfire.UI.Me.SettingsViewsLive.AdminReportsLive
          
        /> --}

      <!-- {#match "team"}
    <div class="p-3">
      <div class="border border-base-content/30 rounded-box p-3">
        <span class="font-bold">Admins</span>
        </div>
      <div class="border mt-3 border-base-content/30 rounded-box p-3">
        <span class="font-bold">Moderators</span>

      </div>

    </div> -->
    {#match "members"}
      <Bonfire.UI.Me.SettingsViewsLive.InstanceMembersLive
        id={:instance_members}
      />
    {#match "remote_users"}
      <Bonfire.UI.Me.SettingsViewsLive.InstanceMembersLive
        id={:remote_users}
        show={:remote}
      />
      {!-- {#match "instance_silenced"}
      <Bonfire.Boundaries.Web.BlocksLive scope={:instance_wide} id="blocks" selected_tab="silenced" name={l "Ghosted instance-wide"} />
    {#match "instance_ghosted"}
      <Bonfire.Boundaries.Web.BlocksLive scope={:instance_wide} id="blocks" selected_tab="ghosted" name={l "Silenced instance-wide"} /> --}
    {#match "shared_user"}
      <Bonfire.UI.Me.SettingsViewsLive.SharedUserLive
        current_user={current_user(@__context__) |> repo().maybe_preload(:shared_user)}
        selected_tab={@selected_tab}
      />
      {!-- {#match "instance_circles"}
      <StatefulComponent
        module={maybe_component(Bonfire.Boundaries.Web.MyCirclesLive, @__context__) and current_user(@__context__)}
        id="circles"
        scope={:instance}
      />
    {#match "instance_acls"}
      <StatefulComponent
        module={maybe_component(Bonfire.Boundaries.Web.MyAclsLive, @__context__) and current_user(@__context__)}
        selected_tab="acls"
        id="my_acls"
        scope={:instance}
      /> --}
    {#match "icons"}
      <Bonfire.UI.Common.SettingsViewsLive.IconsLive selected_tab={@selected_tab} />
    {#match "emojis"}
      <StatefulComponent
        module={maybe_component(Bonfire.Files.Web.UploadEmojiLive)}
        id="custom_emojis"
        scope={:instance}
        description={l("You can define custom emoji for all users on this instance.")}
      />
    {#match _}
      {#case maybe_to_atom!(@selected_tab)}
        {#match nil}
          <Bonfire.UI.Me.SettingsViewsLive.InstanceConfigLive selected_tab={@selected_tab} />
        {#match extension}
          <Bonfire.UI.Me.ExtensionSettingsLive extension={extension} scope={:instance} />
      {/case}
  {/case}
</section>
{!-- </div> --}
