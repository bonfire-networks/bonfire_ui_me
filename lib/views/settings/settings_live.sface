<section class="bg-base-100">
  {#case @selected_tab}
    {#match "dashboard"}
      <Bonfire.UI.Me.SettingsViewsLive.InstanceDashboardLive
        selected_tab={@selected_tab}
        scope={@scope}
      />
    {#match "profile"}
      <Bonfire.UI.Me.SettingsViewsLive.EditProfileLive
        :if={current_user_id(@__context__)}
        selected_tab={@selected_tab}
      />
    {#match "preferences"}
      <Bonfire.UI.Me.SettingsViewsLive.PreferencesLive
        selected_tab={@selected_tab}
        id={@id}
        scope={@scope}
      />
    {#match "feeds"}
      <StatelessComponent
        module={maybe_component(Bonfire.UI.Social.FeedsSettingsLive, @__context__)}
        selected_tab={@selected_tab}
        id={@id}
        scope={@scope}
      />
    {#match "account"}
      <Bonfire.UI.Me.SettingsViewsLive.EditAccountLive selected_tab={@selected_tab} />
    {#match "import"}
      <StatefulComponent
        module={maybe_component(Bonfire.UI.Social.ImportLive, @__context__)}
        selected_tab={@selected_tab}
        id="import"
      />
    {#match "import_status"}
      <StatefulComponent
        module={maybe_component(Bonfire.UI.Social.BackgroundProcessingStatusLive, @__context__)}
        selected_tab="import"
        page_title={l("Import Status")}
        id="import_status"
      />
    {#match "export"}
      <StatelessComponent
        module={maybe_component(Bonfire.UI.Social.ExportLive, @__context__)}
        selected_tab={@selected_tab}
      />
    {#match "federation_status"}
      <StatefulComponent
        module={maybe_component(Bonfire.UI.Social.BackgroundProcessingStatusLive, @__context__)}
        selected_tab="federation"
        page_title={l("Federation Status")}
        id="federation_status"
      />
    {#match "extensions"}
      <Bonfire.UI.Common.ExtensionsLive id="extensions" scope={@scope} />
    {#match "flags"}
      <StatefulComponent
        :if={current_user(@__context__)}
        module={maybe_component(Bonfire.UI.Moderation.FlagsLive, @__context__)}
        selected_tab={@selected_tab}
        id="flags"
      />
    {#match "silenced"}
      <StatefulComponent
        module={maybe_component(Bonfire.UI.Boundaries.BlocksLive, @__context__)}
        id="blocks"
        selected_tab="silenced"
      />
    {#match "ghosted"}
      <StatefulComponent
        module={maybe_component(Bonfire.UI.Boundaries.BlocksLive, @__context__)}
        id="blocks"
        selected_tab="ghosted"
      />
    {#match "blocks_import"}
      <StatefulComponent
        module={maybe_component(Bonfire.UI.Social.ImportLive, @__context__)}
        selected_tab={@selected_tab}
        type={:blocks}
        id="import"
      />
    {#match "shared_user"}
      <Bonfire.UI.Me.SettingsViewsLive.SharedUserLive
        :if={module_enabled?(Bonfire.Me.SharedUsers, @__context__)}
        current_user={current_user(@__context__) |> repo().maybe_preload(:shared_user)}
        selected_tab={@selected_tab}
      />
    {#match "crawler_boundaries"}
      <StatefulComponent
        module={maybe_component(Bonfire.UI.Common.CrawlerBoundaries.SettingsLive, @__context__)}
        id="crawler_boundaries"
        selected_tab={@selected_tab}
        scope={@scope}
      />
    {#match "icons"}
      <Bonfire.UI.Common.SettingsViewsLive.IconsLive selected_tab={@selected_tab} />
    {#match "emojis"}
      <StatefulComponent
        module={maybe_component(Bonfire.Files.Web.UploadEmojiLive, @__context__)}
        id="custom_emojis"
        description={l("You can define custom emoji to use when writing on Bonfire.")}
      />
    {#match "code"}
      <Bonfire.UI.Common.ExtraDepsLive />
    {#match "config_settings_registry"}
      <Bonfire.UI.Common.ConfigSettingsRegistryLive id="config_settings_registry" scope={@scope} />
    {#match nil}
      {#if @scope == :account}
        <Bonfire.UI.Me.SettingsViewsLive.EditAccountLive selected_tab={@selected_tab} scope={@scope} />
      {#else}
        <Bonfire.UI.Me.SettingsViewsLive.EditProfileLive
          :if={current_user_id(@__context__)}
          selected_tab={@selected_tab}
          scope={@scope}
        />
      {/if}
    {#match _}
      {#case maybe_to_atom!(@selected_tab)}
        {#match nil}
          {#if @scope == :account}
            <Bonfire.UI.Me.SettingsViewsLive.EditAccountLive selected_tab={@selected_tab} scope={@scope} />
          {#else}
            <Bonfire.UI.Me.SettingsViewsLive.EditProfileLive
              :if={current_user_id(@__context__)}
              selected_tab={@selected_tab}
              scope={@scope}
            />
          {/if}

          <!-- <Bonfire.UI.Me.SettingsViewsLive.UserDashboardLive selected_tab={@selected_tab} /> -->
        {#match extension}
          <Bonfire.UI.Me.ExtensionSettingsLive
            id="extension_settings"
            extension={extension}
            scope={@scope}
          />
      {/case}
  {/case}
</section>
{!-- </div> --}
