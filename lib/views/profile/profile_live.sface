<main data-id="profile" data-user-id={e(@user, :id, "")} data-guest={@is_guest?}>
  {#if !@silenced_instance_wide? and !@silenced?}
    <StatelessComponent
      module={maybe_component(Bonfire.UI.Social.ProfileTimelineLive, @user)}
      {...assigns}
    >
      <:header>
        <StatelessComponent
          module={Config.get(
            [:ui, :profile, :hero_component],
            Bonfire.UI.Me.ProfileHeroFullLive
          )}
          object_id={id(@user)}
          path={@path}
          myself={nil}
          skip_preload
          object={@user}
          user={@user}
          boundary_preset={@boundary_preset}
          ghosted_instance_wide?={@ghosted_instance_wide?}
          silenced_instance_wide?={@silenced_instance_wide?}
          ghosted?={@ghosted?}
          silenced?={@silenced?}
          block_status={e(assigns, :block_status, nil)}
          selected_tab={@selected_tab}
          follows_me={e(@follows_me, false)}
          character_type={@character_type}
        />
        <Bonfire.UI.Common.TabsLive
          :if={!@hide_tabs}
          class="px-4 md:px-0 flex justify-between w-full border-b bg-base-100 tabs border-base-content/10"
          tab_class="flex flex-1 pt-4 text-base capitalize hover:bg-base-content hover:bg-opacity-10 place-content-center lined_tab"
          item_class="text-base-content/60 text-sm pb-4 border-b border-transparent font-medium"
          selected_tab={@selected_tab}
          path_prefix={if @character_type == :user,
            do: "/@#{e(@user, :character, :username, "")}/",
            else: "/&#{e(@user, :character, :username, "")}/"}
          tabs={if @character_type == :user,
            do: Config.get([:ui, :profile, :navigation], nil: l("Timeline")),
            else: Config.get([:ui, :group, :profile, :navigation], nil: l("Timeline"))}
        />
      </:header>
    </StatelessComponent>
  {#else}
    {!-- when silenced show only the header but no timeline or other content --}
    <StatelessComponent
      module={Config.get(
        [:ui, :profile, :hero_component],
        Bonfire.UI.Me.ProfileHeroFullLive
      )}
      object_id={id(@user)}
      object={@user}
      boundary_preset={@boundary_preset}
      user={@user}
      path={@path}
      myself={nil}
      skip_preload
      ghosted_instance_wide?={@ghosted_instance_wide?}
      silenced_instance_wide?={@silenced_instance_wide?}
      ghosted?={@ghosted?}
      silenced?={@silenced?}
      block_status={e(assigns, :block_status, nil)}
      selected_tab={@selected_tab}
      follows_me={e(@follows_me, false)}
      character_type={@character_type}
    />
  {/if}
</main>
